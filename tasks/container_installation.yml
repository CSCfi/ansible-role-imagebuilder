---
# tasks file for imagebuilder-role
- name: Ensure required packages are installed
  package:
    name:
      - git
      - podman
      - python3

- name: Create imagebuilder user
  user:
    name: "{{ imagebuilder_user_to_execute }}"
    state: present
    create_home: yes
    home: "/home/{{ imagebuilder_user_to_execute }}"
    system: yes

- name: Ensure Ansible remote_tmp exists
  file:
    path: /home/imagebuilder/.ansible/tmp
    state: directory
    owner: imagebuilder
    group: imagebuilder
    mode: "0755"

- name: Allow imagebuilder group to read its home
  file:
    path: /home/{{ imagebuilder_user_to_execute }}
    mode: "0750"
    state: directory


- name: Clone repository
  git:
    repo: "{{ imagebuilder_repository_url }}"
    dest: "/home/{{ imagebuilder_user_to_execute }}/{{ imagebuilder_directory }}"
    version: "{{imagebuilder_repo_ref}}"

  register: imagebuilder_git_result

- name: Ensure .config exists for {{ imagebuilder_user_to_execute }}
  file:
      path: "/home/{{ imagebuilder_user_to_execute }}/.config"
      state: directory
      mode: '0755'

- name: Copy vaulted clouds.yaml
  copy:
    content: "{{ imagebuilder_clouds_yaml | to_nice_yaml }}"
    dest: "/home/{{ imagebuilder_user_to_execute }}/.config/clouds.yaml"
    mode: '0600'

- name: Ensure {{ imagebuilder_extra_dir }} exists
  file:
      path: /home/{{ imagebuilder_user_to_execute }}/{{ imagebuilder_extra_dir }}
      state: directory
      mode: '0755'

- name: Copy input.json to remote
  copy:
    dest: /home/{{ imagebuilder_user_to_execute }}/{{ imagebuilder_extra_dir }}/input.json
    content: "{{ imagebuilder_image_data | to_nice_json }}"

- name: ensure log file exists on remote
  file:
    state: touch
    path: /home/{{ imagebuilder_user_to_execute }}/{{ imagebuilder_extra_dir }}/{{ item.value.service.log_file }}
    mode: '644'
  loop: "{{ imagebuilder_clouds_yaml.clouds | dict2items }}"

- name: Check if image exists
  containers.podman.podman_image_info:
    name: "{{ imagebuilder_container_name }}"
  register: imagebuilder_pod_info
  ignore_errors: true
  changed_when: false

- name: Build imagebuilder container
  shell:
    cmd: podman build --network host -t {{ imagebuilder_container_name }} /home/{{ imagebuilder_user_to_execute }}/{{ imagebuilder_directory }}

  when: imagebuilder_git_result.changed or (imagebuilder_pod_info.images is not defined) or (imagebuilder_pod_info.images | length == 0)

- name: Deploy imagebuilder services
  template:
    src: imagebuilder_run.service.j2
    dest: /etc/systemd/system/imagebuilder-{{ item.value.service.name }}.service
    mode: 0600
  loop: "{{ imagebuilder_clouds_yaml.clouds | dict2items }}"

- name: Deploy imagebuilder timers
  template:
    src: imagebuilder_run.timer.j2
    dest: /etc/systemd/system/imagebuilder-{{ item.value.service.name }}.timer
    mode: 0600
  loop: "{{ imagebuilder_clouds_yaml.clouds | dict2items }}"

- name: Enable imagebuilder timers
  systemd:
    name: imagebuilder-{{ item.value.service.name }}.timer
    enabled: true
    state: started
    daemon_reload: true

  loop: "{{ imagebuilder_clouds_yaml.clouds | dict2items }}"

- name: Deploy imagebuilder check configurations
  template:
    src: imagebuilder_check_cfg.j2
    dest: "{{ nagios_include_dir }}/imagebuilder-{{ item.value.service.name }}.cfg"
    mode: 0600
    owner: "{{ nrpe_user }}"
    group: "{{ nrpe_group }}"
  loop: "{{ imagebuilder_clouds_yaml.clouds | dict2items }}"



...